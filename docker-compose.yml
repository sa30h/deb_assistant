services:
  app:
    build: .
    container_name: webapp
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DB_TYPE=${DB_TYPE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - LLM_PROVIDER=${LLM_PROVIDER}
      - LLM_MODEL=${LLM_MODEL}
      - HUMAN_INTERVENTION=${HUMAN_INTERVENTION}
      - AUTO_APPROVE_QUERIES=${AUTO_APPROVE_QUERIES}
      - MAX_QUERY_RESULTS=${MAX_QUERY_RESULTS}
      - HOST=${HOST}
      - PORT=${PORT}
      - DEBUG=${DEBUG}
      - LOG_LEVEL=${LOG_LEVEL}
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network
      # - bluswap-be_mynetwork

  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  
    restart: unless-stopped
    networks:
      - app-network

  # Optional: nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # SSL certificates
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
  # bluswap-be_mynetwork:
  #   external: true